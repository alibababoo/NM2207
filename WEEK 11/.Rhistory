historic_state_data_url <- "https://api.covidactnow.org/v2/states.timeseries.json?apiKey=f8b34cfbebcd4d488e8fec35b98b1f39"
raw_data <- GET(historic_state_data_url)
historic_state_data_url <- "https://api.covidactnow.org/v2/states.timeseries.json?apiKey=f8b34cfbebcd4d488e8fec35b98b1f39"
raw_data <- GET(historic_state_data_url)
time_series <- data %>%
unnest(actualsTimeseries)
time_series <- data %>%
unnest(actualsTimeseries)
time_series <- data %>%unnest(actualsTimeseries)
time_series <- data %>%unnest(actualsTimeseries)
time_series <- data %>% unnest(actualsTimeseries)
historic_state_data_url <- "https://api.covidactnow.org/v2/states.timeseries.json?apiKey=f8b34cfbebcd4d488e8fec35b98b1f39"
raw_data <- GET(historic_state_data_url)
historic_state_data_url <- "https://api.covidactnow.org/v2/states.timeseries.json?apiKey=f8b34cfbebcd4d488e8fec35b98b1f39"
raw_data <- GET(historic_state_data_url)
time_series <- data %>%
unnest(actualsTimeseries)
historic_state_data_url <- "https://api.covidactnow.org/v2/states.timeseries.json?apiKey=f8b34cfbebcd4d488e8fec35b98b1f39"
raw_data <- GET(historic_state_data_url)
historic_state_data_url <- "https://api.covidactnow.org/v2/states.timeseries.json?apiKey=f8b34cfbebcd4d488e8fec35b98b1f39"
raw_data <- GET(historic_state_data_url)
historic_state_data_url <- "https://api.covidactnow.org/v2/states.timeseries.json?apiKey=f8b34cfbebcd4d488e8fec35b98b1f39"
raw_data <- GET(historic_state_data_url)
historic_state_data_url <- "https://api.covidactnow.org/v2/states.timeseries.json?apiKey=f8b34cfbebcd4d488e8fec35b98b1f39"
raw_data <- GET(historic_state_data_url)
historic_state_data_url <- "https://api.covidactnow.org/v2/states.timeseries.json?apiKey=f8b34cfbebcd4d488e8fec35b98b1f39"
raw_data <- GET(historic_state_data_url)
historic_state_data_url <- "https://api.covidactnow.org/v2/states.timeseries.json?apiKey=f8b34cfbebcd4d488e8fec35b98b1f39"
raw_data <- GET(historic_state_data_url)
library(httr)
library(jsonlite)
library(tidyverse)
historic_state_data_url <- "https://api.covidactnow.org/v2/states.timeseries.json?apiKey=f8b34cfbebcd4d488e8fec35b98b1f39"
raw_data <- GET(historic_state_data_url)
data <- fromJSON(rawToChar(raw_data$content))
glimpse(data)
library(httr)
library(jsonlite)
library(tidyverse)
historic_state_data_url <- "https://api.covidactnow.org/v2/states.timeseries.json?apiKey=f8b34cfbebcd4d488e8fec35b98b1f39"
raw_data <- GET(historic_state_data_url)
data <- fromJSON(rawToChar(raw_data$content))
glimpse(data)
time_series <- data %>%
unnest(actualsTimeseries)
time_series_transmission <- tibble(Date=time_series$cdcTransmissionLevelTimeseries[[which(data$state=="CA")]]$date)
# Transmission levels in each state
time_series_transmission$Alaska <- time_series$cdcTransmissionLevelTimeseries[[which(data$state=="AK")]]$cdcTransmissionLevel
time_series_transmission$California <- time_series$cdcTransmissionLevelTimeseries[[which(data$state=="CA")]]$cdcTransmissionLevel
time_series_transmission$New_Jersey <- time_series$cdcTransmissionLevelTimeseries[[which(data$state=="NJ")]]$cdcTransmissionLevel
time_series_transmission$Tennessee <- time_series$cdcTransmissionLevelTimeseries[[which(data$state=="TN")]]$cdcTransmissionLevel
time_series_transmission$District_of_Columbia <- time_series$cdcTransmissionLevelTimeseries[[which(data$state=="DC")]]$cdcTransmissionLevel
print(head(time_series_transmission))
topics <- c("Disecting Datasets & Data Visualisation & Using Shiny", "Passing Datasets through a pipe operator", "Tidy Data & Selecting Multiple Columns & Arranging Columns", "Ggplot & Designing Ggplot Graphs", "Shiny User Interface")
weeks <- c(2, 3, 4, 7, 8)
learning_schedule <- data.frame(Topic = topics, Week = weeks)
print(teaching_schedule)
print(teaching_schedule)
print(teaching_schedule)
print(learning_schedule)
