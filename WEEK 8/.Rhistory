library(shiny)
runExample
runExample("01_Hello")
runExample("01_Hello")
setwd("~/Downloads/NM2207/WEEK 8/app")
>runApp("app")
runApp("app")
setwd("~/Downloads/NM2207/WEEK 8")
runApp("app")
runApp('app')
library(ggplot2)
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
packages
runExample("11_timer")
knitr::opts_chunk$set(echo = TRUE)
library(shiny)
# Define UI for displaying current time ----
ui <- fluidPage(
h1(textOutput("THE TIME NOW IS"))
)
# Define server logic to show current time, update every second ----
server <- function(input, output, session) {
output$currentTime <- renderText({
invalidateLater(1000, session)
paste("The current time is", Sys.time())
})
}
# Create Shiny app ----
shinyApp(ui, server)
runExample("11_timer")
library(shiny)
# Define UI for displaying current time ----
ui <- fluidPage(
h6("YES"),
h1(textOutput("currentTime"))
)
# Define server logic to show current time, update every second ----
server <- function(input, output, session) {
output$currentTime <- renderText({
invalidateLater(1000, session)
paste("THE TIME NOW IS", Sys.time())
})
}
# Create Shiny app ----
shinyApp(ui, server)
library(shiny)
# Define UI for displaying current time ----
ui <- fluidPage(
titlePanel("TIMER"),
h1(textOutput("currentTime"))
)
# Define server logic to show current time, update every second ----
server <- function(input, output, session) {
output$currentTime <- renderText({
invalidateLater(1000, session)
paste("THE TIME NOW IS", Sys.time())
})
}
# Create Shiny app ----
shinyApp(ui, server)
library(shiny)
# Define UI for displaying current time ----
ui <- fluidPage(
titlePanel("TIMER"),
h1(textOutput("currentTime")),
span("TIMER", style = "color:blue")
)
# Define server logic to show current time, update every second ----
server <- function(input, output, session) {
output$currentTime <- renderText({
invalidateLater(1000, session)
paste("THE TIME NOW IS", Sys.time())
})
}
# Create Shiny app ----
shinyApp(ui, server)
library(shiny)
# Define UI for displaying current time ----
ui <- fluidPage(
titlePanel("TIMER", span("style = "color:blue")),
library(shiny)
# Define UI for displaying current time ----
ui <- fluidPage(
titlePanel("TIMER"),
h1(textOutput("currentTime")),
span(style = "color:blue")
)
# Define server logic to show current time, update every second ----
server <- function(input, output, session) {
output$currentTime <- renderText({
invalidateLater(1000, session)
paste("THE TIME NOW IS", Sys.time())
})
}
# Create Shiny app ----
shinyApp(ui, server)
library(shiny)
# Define UI for displaying current time ----
ui <- fluidPage(
span(style = "color:blue"),
titlePanel("TIMER"),
h1(textOutput("currentTime"))
)
# Define server logic to show current time, update every second ----
server <- function(input, output, session) {
output$currentTime <- renderText({
invalidateLater(1000, session)
paste("THE TIME NOW IS", Sys.time())
})
}
# Create Shiny app ----
shinyApp(ui, server)
library(shiny)
# Define UI for displaying current time ----
ui <- fluidPage(
em(style = "color:blue"),
titlePanel("TIMER"),
h1(textOutput("currentTime"))
)
# Define server logic to show current time, update every second ----
server <- function(input, output, session) {
output$currentTime <- renderText({
invalidateLater(1000, session)
paste("THE TIME NOW IS", Sys.time())
})
}
# Create Shiny app ----
shinyApp(ui, server)
library(shiny)
# Define UI for displaying current time ----
ui <- fluidPage(
em("TIMER),
titlePanel("TIMER"),
library(shiny)
# Define UI for displaying current time ----
ui <- fluidPage(
em("TIMER),
titlePanel("TIMER"),
library(shiny)
# Define UI for displaying current time ----
ui <- fluidPage(
titlePanel("TIMER"),
h1(textOutput("currentTime"))
)
# Define server logic to show current time, update every second ----
server <- function(input, output, session) {
output$currentTime <- renderText({
invalidateLater(1000, session)
paste("THE TIME NOW IS", Sys.time())
})
}
# Create Shiny app ----
shinyApp(ui, server)
library(shiny)
# Define UI for displaying current time ----
ui <- fluidPage(
titlePanel("TIMER"),
h1(textOutput("currentTime")),
code("TIMER")
)
# Define server logic to show current time, update every second ----
server <- function(input, output, session) {
output$currentTime <- renderText({
invalidateLater(1000, session)
paste("THE TIME NOW IS", Sys.time())
})
}
# Create Shiny app ----
shinyApp(ui, server)
setwd("~/Downloads/NM2207/Submission Week-9")
